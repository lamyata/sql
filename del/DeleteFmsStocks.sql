--BEGIN TRAN

DECLARE @ListOfStockIDs TABLE(ITEM_ID int)
DECLARE @ListOfStockInfoIDs TABLE(ITEM_ID int)
DECLARE @ListOfStockInfoConfigIDs TABLE(ITEM_ID int)
DECLARE @ListOfExtraQtyIDs TABLE(ITEM_ID int)
DECLARE @ListOfBaseQtyIDs TABLE(ITEM_ID int)
DECLARE @ListOfStorageQtyIDs TABLE(ITEM_ID int)
declare @companyCode nvarchar(50) = 'FMS'

-- Select Ids of entities to be deleted

INSERT INTO @ListOfExtraQtyIDs
SELECT sieq.STOCK_INFO_QUANTITY_ID FROM STOCK_INFO_CONFIG sic 
JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
JOIN STOCK_INFO_EXTRA_QUANTITY sieq ON si.STOCK_INFO_ID = sieq.STOCK_INFO_ID
WHERE c.CODE = @companyCode

INSERT INTO @ListOfBaseQtyIDs
SELECT siq.STOCK_INFO_QUANTITY_ID FROM STOCK_INFO_CONFIG sic 
JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
JOIN STOCK_INFO_QUANTITY siq ON si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
WHERE c.CODE = @companyCode

INSERT INTO @ListOfStorageQtyIDs
SELECT siq.STOCK_INFO_QUANTITY_ID FROM STOCK_INFO_CONFIG sic 
JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
JOIN STOCK_INFO_QUANTITY siq ON si.STORAGE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
WHERE c.CODE = @companyCode AND 
	  si.STORAGE_QUANTITY_ID IS NOT NULL

INSERT INTO @ListOfStockIDs
SELECT s.STOCK_ID FROM STOCK_INFO_CONFIG sic 
JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
WHERE c.CODE = @companyCode

INSERT INTO @ListOfStockInfoIDs
SELECT si.STOCK_INFO_ID FROM STOCK_INFO_CONFIG sic 
JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
WHERE c.CODE = @companyCode

INSERT INTO @ListOfStockInfoConfigIDs
SELECT sic.STOCK_INFO_CONFIG_ID FROM STOCK_INFO_CONFIG sic 
JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
WHERE c.CODE = @companyCode

print 'Load temp data completed.'

-- Update request items, rather than deleting them - TODO Delete them also 
UPDATE STOCK_INVENTORY_REQUEST_ITEM 
SET STOCK_ID = NULL, 
	UPDATE_TIMESTAMP = GETDATE(), 
	UPDATE_USER = 'sysDelFmsStocks'
WHERE STOCK_ID IN 
	(SELECT s.STOCK_ID FROM STOCK_INFO_CONFIG sic 
	JOIN COMPANY c ON sic.OWNER_ID = c.COMPANY_ID
	JOIN STOCK_INFO si ON sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
	JOIN STOCK s ON si.STOCK_INFO_ID = s.STOCK_INFO_ID
	WHERE c.CODE = 'FMS')

DELETE FROM STOCK WHERE STOCK_ID in (SELECT ITEM_ID FROM @ListOfStockIDs)

print 'Stocks deleted.'

DELETE FROM STOCK_INFO_EXTRA_QUANTITY WHERE STOCK_INFO_QUANTITY_ID in (SELECT ITEM_ID FROM @ListOfExtraQtyIDs)

DELETE FROM STOCK_INFO_QUANTITY WHERE STOCK_INFO_QUANTITY_ID in (SELECT ITEM_ID FROM @ListOfExtraQtyIDs)
print 'Extra quantities deleted.'

DELETE FROM STOCK_INFO WHERE STOCK_INFO_ID in (SELECT ITEM_ID FROM @ListOfStockInfoIDs)
print 'Stock infos deleted.'

DELETE FROM STOCK_INFO_QUANTITY WHERE STOCK_INFO_QUANTITY_ID IN (SELECT ITEM_ID FROM @ListOfBaseQtyIDs)
print 'Base quantities deleted.'

DELETE FROM STOCK_INFO_QUANTITY WHERE STOCK_INFO_QUANTITY_ID IN (SELECT ITEM_ID FROM @ListOfStorageQtyIDs)
print 'Storage quantities deleted.'

DELETE FROM STOCK_INFO_CONFIG_EXTRA_UNIT WHERE STOCK_INFO_CONFIG_ID in (SELECT ITEM_ID FROM @ListOfStockInfoConfigIDs)
DELETE FROM STOCK_INFO_SID WHERE STOCK_INFO_CONFIG_ID in (SELECT ITEM_ID FROM @ListOfStockInfoConfigIDs)
print 'SIDs deleted.'
DELETE FROM STOCK_INFO_CONFIG WHERE STOCK_INFO_CONFIG_ID in (SELECT ITEM_ID FROM @ListOfStockInfoConfigIDs)
print 'SICs deleted.'

--ROLLBACK TRAN