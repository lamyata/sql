-- rpt info
select rpt.RPT_ID, rpt.[TYPE], rpt.TRANSPORT_ID as TR_ID, rpt.INVENTORY_STATUS as I_ST,
	case rpt.INVENTORY_STATUS when 0 then 'Open' when 1 then 'Pending-Complete' when 2 then 'Done' when 3 then 'Pending-Reopen' end as InvStatus,
	rpt.STOCK_INVENTORY_REQUEST_ID as SIR_ID,
	r.ORDER_ITEM_ID as OI_ID, r.[STATUS] as ST,
	case r.[STATUS] when 0 then 'Open' when 1 then 'Processing' when 2 then 'Completed' when 3 then 'Closed' end as [STATUS],
	si.STOCK_INFO_ID,
	si.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY as BASE, siqSt.QUANTITY as STORAGE,
	c.[DATE] as CTXT_DATE, r.CREATE_USER, r.CREATE_TIMESTAMP, r.UPDATE_USER, r.UPDATE_TIMESTAMP
from (
select LOADING_OPERATION_REPORT_ID as RPT_ID, 'Loading' as [TYPE], REPORTED_ID, TRANSPORT_ID, INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from LOADING_OPERATION_REPORT lor
union select DISCHARGING_OPERATION_REPORT_ID, 'Discharging', REPORTED_ID, TRANSPORT_ID, INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from DISCHARGING_OPERATION_REPORT dor
union select VAS_OPERATION_REPORT_ID, 'VAS', vif.STOCK_INFO_ID, '', INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from VAS_OPERATION_REPORT vor join VAS_ITEM_FROM vif on vif.VAS_ITEM_ID = vor.REPORTED_ID
union select STOCK_CHANGE_OPERATION_REPORT_ID, 'Stock-change', sci.FROM_ID, '', INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from STOCK_CHANGE_OPERATION_REPORT scor join STOCK_CHANGE_ITEM sci on scor.REPORTED_ID = sci.STOCK_CHANGE_ITEM_ID
) as rpt
join OPERATION_REPORT r on r.OPERATION_REPORT_ID = rpt.RPT_ID
join OPERATION_CONTEXT c on r.CONTEXT_ID = c.OPERATION_CONTEXT_ID
join STOCK_INFO si on si.STOCK_INFO_ID = rpt.REPORTED_ID
join STOCK_INFO_CONFIG sic on sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID and sis.SID_ID = 23 and sis.VALUE = '8062450'
left join STOCK_INFO_QUANTITY siqSt on si.STORAGE_QUANTITY_ID = siqSt.STOCK_INFO_QUANTITY_ID
where rpt.RPT_ID in (1966)

-- inventory
select s.*, b_siq.QUANTITY,
	stuff((select ', ' + cast(siq1.MEASUREMENT_UNIT_ID as varchar) + ': ' + cast(siq1.QUANTITY as varchar) from STOCK_INFO_QUANTITY siq1 join STOCK_INFO_EXTRA_QUANTITY sieq on siq1.STOCK_INFO_QUANTITY_ID = sieq.STOCK_INFO_QUANTITY_ID and sieq.STOCK_INFO_ID = s.STOCK_INFO_ID for XML PATH('')), 1, 2, '') as ExtraQs,
	sic._KEY_
from STOCK s
inner join STOCK_INFO si on si.STOCK_INFO_ID = s.STOCK_INFO_ID
inner join STOCK_INFO_CONFIG sic on sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
inner join STOCK_INFO_QUANTITY b_siq on si.BASE_QUANTITY_ID = b_siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID and sis.SID_ID = 4 and sis.VALUE = 'A077456'
where sic.INTERNAL_COMPANY_ID = 299
and sic.OWNER_ID = 298
and sic.PRODUCT_ID = 3684
and sic.LOCATION_ID = 1858
and sic.TRACKING_NUMBER = '20160601'
and sic.LOT = '1597860'
--and sic.INVENTORY_NUMBER = '00546000218368200007'
order by s.OPERATIONAL_DATE, s.UPDATE_TIMESTAMP asc

-- sir log
select sir.*, siri.*, sic._KEY_, siq.QUANTITY,
	stuff((select ', ' + cast(siq1.MEASUREMENT_UNIT_ID as varchar) + ': ' + cast(siq1.QUANTITY as varchar) from STOCK_INFO_QUANTITY siq1 join STOCK_INFO_EXTRA_QUANTITY sieq on siq1.STOCK_INFO_QUANTITY_ID = sieq.STOCK_INFO_QUANTITY_ID and sieq.STOCK_INFO_ID = siri.STOCK_INFO_ID for XML PATH('')), 1, 2, '') as ExtraQs
from STOCK_INVENTORY_REQUEST_ITEM siri 
inner join STOCK_INFO si on siri.STOCK_INFO_ID = si.STOCK_INFO_ID
inner join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
inner join STOCK_INVENTORY_REQUEST sir on siri.REQUEST_ID = sir.STOCK_INVENTORY_REQUEST_ID
inner join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID and sis.SID_ID = 4 and sis.VALUE = 'A077456'
where sic.INTERNAL_COMPANY_ID = 299
and sic.OWNER_ID = 298
and sic.PRODUCT_ID = 3684
and sic.LOCATION_ID = 1858
and sic.LOT = '1597860'
and sic.TRACKING_NUMBER = '20160601'
--and sic.INVENTORY_NUMBER = '00546000218368200007'
order by sir.OPERATIONAL_DATE, sir.UPDATE_TIMESTAMP asc





-- update reporting and T and OI (reopen OI)
update OPERATION_REPORT set STATUS = STATUS - 1 where ORDER_ITEM_ID in (6234)
update ORDER_ITEM set STATUS = STATUS - 1 where ORDER_ITEM_ID in (6234)
update t set STATUS = STATUS-1, END_TIME = null from TRANSPORT t join LOADING_ORDER_ITEM loi on t.TRANSPORT_ID = loi.TRANSPORT_ID where LOADING_ORDER_ITEM_ID in (6234)
update LOADING_ORDER_ITEM set CUSTOMS_STATUS = 0 where LOADING_ORDER_ITEM_ID in (6234)
--update t set STATUS = STATUS-1, END_TIME = null from TRANSPORT t join DISCHARGING_ORDER_ITEM doi on t.TRANSPORT_ID = doi.TRANSPORT_ID where DISCHARGING_ORDER_ITEM_ID in ( 26311)
--update DISCHARGING_ORDER_ITEM set CUSTOMS_STATUS = 0 where DISCHARGING_ORDER_ITEM_ID in (26311)--update t set STATUS = STATUS-1, END_TIME = null from TRANSPORT t join DISCHARGING_ORDER_ITEM doi on t.TRANSPORT_ID = doi.TRANSPORT_ID where DISCHARGING_ORDER_ITEM_ID in ( 26311)


-- find reporting and planning keys and base qty for discharging report
declare @OperationReportId int = 409440
select 'PLANNED', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from DISCHARGING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.PLANNED_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.DISCHARGING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'REMAINING', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from DISCHARGING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.REMAINING_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.DISCHARGING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'ORDERED', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from DISCHARGING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.ORDERED_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.DISCHARGING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'PENDING', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from DISCHARGING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.PENDING_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.DISCHARGING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'REPORTED', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from DISCHARGING_OPERATION_REPORT dor
	join STOCK_INFO si on dor.REPORTED_ID = si.STOCK_INFO_ID and dor.DISCHARGING_OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
	
-- find reporting and planning keys and base qty for loading report
declare @OperationReportId int = 384108
select 'PLANNED', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from LOADING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.PLANNED_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.LOADING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'REMAINING', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from LOADING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.REMAINING_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.LOADING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'ORDERED', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from LOADING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.ORDERED_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.LOADING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'PENDING', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from LOADING_OPERATION_PLAN dop
	join STOCK_INFO si on dop.PENDING_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = dop.LOADING_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'REPORTED', si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from LOADING_OPERATION_REPORT dor
	join STOCK_INFO si on dor.REPORTED_ID = si.STOCK_INFO_ID and dor.LOADING_OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
	
-- find reporting and planning keys and base qty for vas report	(only vas_item_from has been shown)
declare @OperationReportId int = 17560
select 'PLANNED', vif.VAS_ITEM_ID, si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from VAS_OPERATION_PLAN vop
	join VAS_ITEM_FROM vif on vop.PLANNED_ID = vif.VAS_ITEM_ID
	join STOCK_INFO si on vif.STOCK_INFO_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = vop.VAS_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'REMAINING', vif.VAS_ITEM_ID, si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from VAS_OPERATION_PLAN vop
	join VAS_ITEM_FROM vif on vop.REMAINING_ID = vif.VAS_ITEM_ID
	join STOCK_INFO si on vif.STOCK_INFO_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = vop.VAS_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'ORDERED', vif.VAS_ITEM_ID, si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from VAS_OPERATION_PLAN vop
	join VAS_ITEM_FROM vif on vop.ORDERED_ID = vif.VAS_ITEM_ID
	join STOCK_INFO si on vif.STOCK_INFO_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = vop.VAS_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'PENDING', vif.VAS_ITEM_ID, si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from VAS_OPERATION_PLAN vop
	join VAS_ITEM_FROM vif on vop.PENDING_ID = vif.VAS_ITEM_ID
	join STOCK_INFO si on vif.STOCK_INFO_ID = si.STOCK_INFO_ID
	join OPERATION_REPORT opr on opr.PLAN_ID = vop.VAS_OPERATION_PLAN_ID and opr.OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
union
select 'REPORTED', vif.VAS_ITEM_ID, si.STOCK_INFO_ID, si.BASE_QUANTITY_ID, si.STORAGE_QUANTITY_ID, sic.STOCK_INFO_CONFIG_ID, sic._KEY_, siq.QUANTITY from VAS_OPERATION_REPORT vor
	join VAS_ITEM_FROM vif on vor.REPORTED_ID = vif.VAS_ITEM_ID
	join STOCK_INFO si on vif.STOCK_INFO_ID = si.STOCK_INFO_ID and vor.VAS_OPERATION_REPORT_ID = @OperationReportId
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID	
	
-- find qtys for stock
declare @StockInfoId int = 1850996
select si.*, siq.QUANTITY from
(
select 'BASE' as UNIT_TYPE, BASE_QUANTITY_ID as STOCK_INFO_QUANTITY_ID from STOCK_INFO where STOCK_INFO_ID = @StockInfoId
union
select 'STORAGE', STORAGE_QUANTITY_ID from STOCK_INFO where STOCK_INFO_ID = @StockInfoId
union 
select 'EXTRA', STOCK_INFO_QUANTITY_ID from STOCK_INFO_EXTRA_QUANTITY where STOCK_INFO_ID = @StockInfoId
) as si
join STOCK_INFO_QUANTITY siq on si.STOCK_INFO_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID

-- create trigger
create table LOGS (
[LOG_ID] INT IDENTITY (1, 1),
TableName nvarchar(50) , ID int, CREATE_TIMESTAMP datetime2(7))
go
create trigger trStockInfo
on STOCK_INFO
FOR INSERT, UPDATE
as
	insert into LOGS select 'SIR', max(STOCK_INVENTORY_REQUEST_ID), getdate() from STOCK_INVENTORY_REQUEST;
	insert into LOGS select 'OP', max(OPERATION_PLAN_ID), getdate() from OPERATION_PLAN;
	insert into LOGS select 'OR', max(OPERATION_REPORT_ID), getdate() from OPERATION_REPORT;
	insert into LOGS select 'STOCK_INFO', STOCK_INFO_ID, getdate() from inserted;
go

-- enable trigger
ALTER TABLE STOCK_INFO ENABLE TRIGGER trStockInfo;

--- problem sirs
select sir.*, rpt.* from STOCK_INVENTORY_REQUEST_ITEM siri join STOCK_INFO si on siri.STOCK_INFO_ID = si.STOCK_INFO_ID
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INVENTORY_REQUEST sir on siri.REQUEST_ID = sir.STOCK_INVENTORY_REQUEST_ID
	left join 
(
select STOCK_INVENTORY_REQUEST_ID, 'LOADING' as RPT_TYPE from LOADING_OPERATION_REPORT
union
select STOCK_INVENTORY_REQUEST_ID, 'SC' from STOCK_CHANGE_OPERATION_REPORT
union
select STOCK_INVENTORY_REQUEST_ID, 'VAS' from VAS_OPERATION_REPORT
union
select STOCK_INVENTORY_REQUEST_ID, 'DISCH' from DISCHARGING_OPERATION_REPORT
) rpt on sir.STOCK_INVENTORY_REQUEST_ID = rpt.STOCK_INVENTORY_REQUEST_ID
	--where sic._KEY_ like '{"IC":1,"O":2,"P":120,"L":1075,"BU":4,"TN":"20151006"%'
	where sic._KEY_ like '{"IC":1,"O":2,"P":120,%'
	order by REQUEST_ID
	
-- problem sirs 2
select sir.*,  siri.REQUEST_TYPE, sic._KEY_, rpt.*, siq.QUANTITY, siq.UNIT_ID, siqSt.QUANTITY as STORAGE, siqEx.QUANTITY, siqEx.UNIT_ID as EXTRA
from STOCK_INVENTORY_REQUEST_ITEM siri join STOCK_INFO si on siri.STOCK_INFO_ID = si.STOCK_INFO_ID
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join STOCK_INVENTORY_REQUEST sir on siri.REQUEST_ID = sir.STOCK_INVENTORY_REQUEST_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
	left join STOCK_INFO_QUANTITY siqSt on si.STORAGE_QUANTITY_ID = siqSt.STOCK_INFO_QUANTITY_ID
	left join STOCK_INFO_EXTRA_QUANTITY sieq on si.STOCK_INFO_ID = sieq.STOCK_INFO_ID left join STOCK_INFO_QUANTITY siqEx on sieq.STOCK_INFO_QUANTITY_ID = siqEx.STOCK_INFO_QUANTITY_ID
	left join 
(
select STOCK_INVENTORY_REQUEST_ID, 'LOADING' as RPT_TYPE from LOADING_OPERATION_REPORT
union
select STOCK_INVENTORY_REQUEST_ID, 'SC' from STOCK_CHANGE_OPERATION_REPORT
union
select STOCK_INVENTORY_REQUEST_ID, 'VAS' from VAS_OPERATION_REPORT
union
select STOCK_INVENTORY_REQUEST_ID, 'DISCH' from DISCHARGING_OPERATION_REPORT
) rpt on sir.STOCK_INVENTORY_REQUEST_ID = rpt.STOCK_INVENTORY_REQUEST_ID
	--where sic._KEY_ like '{"IC":1,"O":2,"P":120,"L":1075,"BU":4,"TN":"20151006"%'
	--where sic._KEY_ like '{"IC":1,"O":3,"P":615,%' and sic._KEY_ like '%{"6":"0080041997"},%'
	where sic.INTERNAL_COMPANY_ID = 299 and sic.OWNER_ID = 513 and sic.PRODUCT_ID = 2560 and sic.LOCATION_ID = 39071 and INVENTORY_NUMBER = '00546000165626200579'
	order by REQUEST_ID

-- problem reps
select a.*
from
(
	select 'DISCHARGING' as 'Type', dor.DISCHARGING_OPERATION_REPORT_ID as 'OR_ID', o.NUMBER + '/' + oi.SEQUENCE as 'Order_Number', o.INTERNAL_COMPANY_ID, o.DATE as 'Order_Date', o_r.STATUS as 'STATUS', dor.INVENTORY_STATUS as 'INVENTORY_STATUS', dor.STOCK_INVENTORY_REQUEST_ID as 'REQUEST_ID', sir.STATUS as 'REQUEST_STATUS', dor.UPDATE_TIMESTAMP as 'OR_UPDATE_TIMESTAMP', dor.UPDATE_USER as 'OR_UPDATE_USER'
	from DISCHARGING_OPERATION_REPORT dor
	inner join OPERATION_REPORT o_r on dor.DISCHARGING_OPERATION_REPORT_ID = o_r.OPERATION_REPORT_ID
	inner join ORDER_ITEM oi on oi.ORDER_ITEM_ID = o_r.ORDER_ITEM_ID
	inner join ORDERS o on o.ORDER_ID = oi.ORDER_ID
	left outer join STOCK_INVENTORY_REQUEST sir on sir.STOCK_INVENTORY_REQUEST_ID = dor.STOCK_INVENTORY_REQUEST_ID
	UNION
	select 'LOADING' as 'Type', lor.LOADING_OPERATION_REPORT_ID as 'OR_ID', o.NUMBER + '/' + oi.SEQUENCE as 'Order_Number', o.INTERNAL_COMPANY_ID, o.DATE as 'Order_Date', o_r.STATUS as 'STATUS', lor.INVENTORY_STATUS as 'INVENTORY_STATUS', lor.STOCK_INVENTORY_REQUEST_ID as 'REQUEST_ID', sir.STATUS as 'REQUEST_STATUS', lor.UPDATE_TIMESTAMP as 'OR_UPDATE_TIMESTAMP', lor.UPDATE_USER as 'OR_UPDATE_USER'
	from LOADING_OPERATION_REPORT lor 
	inner join OPERATION_REPORT o_r on lor.LOADING_OPERATION_REPORT_ID = o_r.OPERATION_REPORT_ID
	inner join ORDER_ITEM oi on oi.ORDER_ITEM_ID = o_r.ORDER_ITEM_ID
	inner join ORDERS o on o.ORDER_ID = oi.ORDER_ID
	left outer join STOCK_INVENTORY_REQUEST sir on sir.STOCK_INVENTORY_REQUEST_ID = lor.STOCK_INVENTORY_REQUEST_ID
	UNION
	select 'VAS' as 'Type', vor.VAS_OPERATION_REPORT_ID as 'OR_ID', o.NUMBER + '/' + oi.SEQUENCE as 'Order_Number', o.INTERNAL_COMPANY_ID, o.DATE as 'Order_Date', o_r.STATUS as 'STATUS', vor.INVENTORY_STATUS as 'INVENTORY_STATUS', vor.STOCK_INVENTORY_REQUEST_ID as 'REQUEST_ID', sir.STATUS as 'REQUEST_STATUS', vor.UPDATE_TIMESTAMP as 'OR_UPDATE_TIMESTAMP', vor.UPDATE_USER as 'OR_UPDATE_USER'
	from VAS_OPERATION_REPORT vor
	inner join OPERATION_REPORT o_r on vor.VAS_OPERATION_REPORT_ID = o_r.OPERATION_REPORT_ID
	inner join ORDER_ITEM oi on oi.ORDER_ITEM_ID = o_r.ORDER_ITEM_ID
	inner join ORDERS o on o.ORDER_ID = oi.ORDER_ID
	left outer join STOCK_INVENTORY_REQUEST sir on sir.STOCK_INVENTORY_REQUEST_ID = vor.STOCK_INVENTORY_REQUEST_ID
	UNION
	select 'STOCK_CHANGE' as 'Type', scor.STOCK_CHANGE_OPERATION_REPORT_ID as 'OR_ID', o.NUMBER + '/' + oi.SEQUENCE as 'Order_Number', o.INTERNAL_COMPANY_ID, o.DATE as 'Order_Date', o_r.STATUS as 'STATUS', scor.INVENTORY_STATUS as 'INVENTORY_STATUS', scor.STOCK_INVENTORY_REQUEST_ID as 'REQUEST_ID', sir.STATUS as 'REQUEST_STATUS', scor.UPDATE_TIMESTAMP as 'OR_UPDATE_TIMESTAMP', scor.UPDATE_USER as 'OR_UPDATE_USER'
	from STOCK_CHANGE_OPERATION_REPORT scor
	inner join OPERATION_REPORT o_r on scor.STOCK_CHANGE_OPERATION_REPORT_ID = o_r.OPERATION_REPORT_ID
	inner join ORDER_ITEM oi on oi.ORDER_ITEM_ID = o_r.ORDER_ITEM_ID
	inner join ORDERS o on o.ORDER_ID = oi.ORDER_ID
	left outer join STOCK_INVENTORY_REQUEST sir on sir.STOCK_INVENTORY_REQUEST_ID = scor.STOCK_INVENTORY_REQUEST_ID
) a
where a.STATUS = 2 
and a.INVENTORY_STATUS != 2
and (a.REQUEST_ID is null or a.REQUEST_STATUS != 4)
--and a.OR_UPDATE_TIMESTAMP >= '2016-06-27'
order by a.OR_UPDATE_TIMESTAMP desc

select * from ORDER_ITEM where STATUS in (3, 4) and COMPLETION_DATE is null

-- inventory
select s.*, b_siq.QUANTITY, sic._KEY_
from STOCK s
inner join STOCK_INFO si on si.STOCK_INFO_ID = s.STOCK_INFO_ID
inner join STOCK_INFO_CONFIG sic on sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
inner join STOCK_INFO_QUANTITY b_siq on si.BASE_QUANTITY_ID = b_siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID and sis.SID_ID = 4 and sis.VALUE = 'A077456'
where sic.INTERNAL_COMPANY_ID = 299
and sic.OWNER_ID = 298
and sic.PRODUCT_ID = 3684
and sic.LOCATION_ID = 1858
and sic.TRACKING_NUMBER = '20160601'
and sic.LOT = '1597860'
--and sic.INVENTORY_NUMBER = '00546000218368200007'
order by s.OPERATIONAL_DATE, s.UPDATE_TIMESTAMP asc

-- sir log
select sir.*, siri.*, sic._KEY_, siq.QUANTITY
from STOCK_INVENTORY_REQUEST_ITEM siri 
inner join STOCK_INFO si on siri.STOCK_INFO_ID = si.STOCK_INFO_ID
inner join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
inner join STOCK_INVENTORY_REQUEST sir on siri.REQUEST_ID = sir.STOCK_INVENTORY_REQUEST_ID
inner join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID and sis.SID_ID = 4 and sis.VALUE = 'A077456'
where sic.INTERNAL_COMPANY_ID = 299
and sic.OWNER_ID = 298
and sic.PRODUCT_ID = 3684
and sic.LOCATION_ID = 1858
and sic.LOT = '1597860'
and sic.TRACKING_NUMBER = '20160601'
--and sic.INVENTORY_NUMBER = '00546000218368200007'
order by sir.OPERATIONAL_DATE, sir.UPDATE_TIMESTAMP asc

--update LOADING_OPERATION_REPORT set STOCK_INVENTORY_REQUEST_ID = 11791, INVENTORY_STATUS = INVENTORY_STATUS+1 where LOADING_OPERATION_REPORT_ID = 12893
select * from ELMAH_Error where TimeUtc between '2016-08-17 8:10' and '2016-08-17 8:30'

-- reps for sir
select oi.ORDER_ID, * from (
select LOADING_OPERATION_REPORT_ID as RPT_ID, 'Loading' as [TYPE], REPORTED_ID, TRANSPORT_ID, INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from LOADING_OPERATION_REPORT lor
union select DISCHARGING_OPERATION_REPORT_ID, 'Discharging', REPORTED_ID, TRANSPORT_ID, INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from DISCHARGING_OPERATION_REPORT dor
union select VAS_OPERATION_REPORT_ID, 'VAS', vif.STOCK_INFO_ID, '', INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from VAS_OPERATION_REPORT vor join VAS_ITEM_FROM vif on vif.VAS_ITEM_ID = vor.REPORTED_ID
union select STOCK_CHANGE_OPERATION_REPORT_ID, 'Stock-change', sci.FROM_ID, '', INVENTORY_STATUS, STOCK_INVENTORY_REQUEST_ID from STOCK_CHANGE_OPERATION_REPORT scor join STOCK_CHANGE_ITEM sci on scor.REPORTED_ID = sci.STOCK_CHANGE_ITEM_ID
) as rpt 
join OPERATION_REPORT r on rpt.RPT_ID = r.OPERATION_REPORT_ID and rpt.STOCK_INVENTORY_REQUEST_ID = 359531
left join ORDER_ITEM oi on r.ORDER_ITEM_ID = oi.ORDER_ITEM_ID

-- reopen all order 
declare @OrderId int = 1674
update oi set STATUS = 2 from ORDER_ITEM oi where ORDER_ID in (@OrderId)
update DISCHARGING_ORDER_ITEM set CUSTOMS_STATUS = 0 from DISCHARGING_ORDER_ITEM doi join ORDER_ITEM oi
	on doi.DISCHARGING_ORDER_ITEM_ID = oi.ORDER_ITEM_ID and oi.ORDER_ID in (@OrderId)
update r set STATUS = 2 from OPERATION_REPORT r join ORDER_ITEM oi
	on r.ORDER_ITEM_ID = oi.ORDER_ITEM_ID and oi.ORDER_ID in (@OrderId)
update t set STATUS = 3, END_TIME = null from TRANSPORT t join DISCHARGING_ORDER_ITEM doi on t.TRANSPORT_ID = doi.TRANSPORT_ID
	join ORDER_ITEM oi on doi.DISCHARGING_ORDER_ITEM_ID = oi.ORDER_ITEM_ID and oi.ORDER_ID in (@OrderId)
update ORDERS set STATUS = 1 where ORDER_ID = @OrderId


-- customs inventory
select cs.*, b_siq.QUANTITY, sic._KEY_ from CUSTOMS_STOCK cs
	join STOCK_INFO si on si.STOCK_INFO_ID = cs.STOCK_INFO_ID
	join STOCK_INFO_CONFIG sic on sic.STOCK_INFO_CONFIG_ID = si.STOCK_INFO_CONFIG_ID
	join STOCK_INFO_QUANTITY b_siq on si.BASE_QUANTITY_ID = b_siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID and sis.SID_ID = 4 and sis.VALUE = 'A077456'
where sic.INTERNAL_COMPANY_ID = 1
and sic.OWNER_ID = 31
and sic.PRODUCT_ID = 64
and sic.LOCATION_ID = 9
and sic.TRACKING_NUMBER is null
and sic.INVENTORY_NUMBER is null
and sic.LOT = '1604812 - Interfert'
order by cs.DATE, cs.UPDATE_TIMESTAMP asc

-- customs inventory history
select cir.*, ciri.*, sic._KEY_, siq.QUANTITY from CUSTOMS_INVENTORY_REQUEST_ITEM ciri
	join STOCK_INFO si on ciri.STOCK_INFO_ID = si.STOCK_INFO_ID
	join STOCK_INFO_CONFIG sic on si.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID
	join CUSTOMS_INVENTORY_REQUEST cir on ciri.REQUEST_ID = cir.CUSTOMS_INVENTORY_REQUEST_ID
	join STOCK_INFO_QUANTITY siq on si.BASE_QUANTITY_ID = siq.STOCK_INFO_QUANTITY_ID
--join STOCK_INFO_SID sis on sis.STOCK_INFO_CONFIG_ID = sic.STOCK_INFO_CONFIG_ID and sis.SID_ID = 4 and sis.VALUE = 'A077456'
where sic.INTERNAL_COMPANY_ID = 1
and sic.OWNER_ID = 31
and sic.PRODUCT_ID = 64
and sic.LOCATION_ID = 9
and sic.TRACKING_NUMBER is null
and sic.INVENTORY_NUMBER is null
and sic.LOT = '1604812 - Interfert'
order by cir.OPERATIONAL_DATE, cir.UPDATE_TIMESTAMP asc

-- fix completion date
declare @OrderItemId int = 44874
declare @CompletionDate datetime = (select max(UPDATE_TIMESTAMP) from OPERATION_REPORT where ORDER_ITEM_ID = @OrderItemId)
update ORDER_ITEM set COMPLETION_DATE = @CompletionDate where ORDER_ITEM_ID = @OrderItemId

-- fix exch rate
update FINANCIAL_LINE set EXCHANGE_RATE = 1, UPDATE_USER = 'sys170222', UPDATE_TIMESTAMP = getdate()
 where EXCHANGE_RATE != 1 and abs(EXCHANGE_RATE -1) < .1