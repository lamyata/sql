-- 325	2	1	2016-05-04 00:00:00.0000000	2016-06-03 00:00:00.0000000	1	160380	1	0	1	2476.00	2476.00	1.000000	48	48	NULL	2016-06-02 00:00:00.0000000	KAL	2016-06-02 14:51:24.0000000	KAL	2016-06-02 14:51:27.2600000	0	160380
-- 365	2	1	2016-05-29 00:00:00.0000000	2016-06-28 00:00:00.0000000	1	160420	1	0	1	809.80	809.80	1.000000	48	48	NULL	2016-06-03 00:00:00.0000000	KAL	2016-06-03 10:33:41.0000000	KAL	2016-06-03 10:33:43.9400000	0	160420
--Seq 160402 160420

--update FINANCIAL_LINE set FINANCIAL_DOCUMENT_ID = null where FINANCIAL_LINE_ID = 2618
--delete from OPERATION_REPORT_FINANCIAL_LINE where FINANCIAL_LINE_ID = 1549 and OPERATION_REPORT_ID = 8470

--delete from FINANCIAL_LINE where FINANCIAL_LINE_ID in (2652, 1670)
--delete from FINANCIAL_LINE_LINE where FINANCIAL_LINE_ID = 2652
--delete from OPERATION_REPORT_FINANCIAL_LINE where FINANCIAL_LINE_ID = 1670

--update TARIFF_INFO set SERVICE_ACCOUNT = '701300' where TARIFF_INFO_ID in (171717, 153926)
--update TARIFF_INFO set SERVICE_ACCOUNT = '701300' where TARIFF_INFO_ID in (153859, 161943)

--update TARIFF_INFO set SERVICE_ACCOUNT = '701300' where TARIFF_INFO_ID in (171717, 153926)
--update TARIFF_INFO set SERVICE_ACCOUNT = '701300' where TARIFF_INFO_ID in (153859, 161943)
--update TARIFF_INFO set SERVICE_ACCOUNT = '701300' where TARIFF_INFO_ID in (152965, 171729)
--update FINANCIAL_LINE set COST_CENTER = 'O-VMROBRASIL' where FINANCIAL_LINE_ID in (37976, 36314)

-- VLF 160477 / 425
-- VLF 160478 / 426
--425	2	1	2016-05-25 00:00:00.0000000	2016-06-24 00:00:00.0000000	1	160477	1	0	1	3693.45	3693.45	1.000000	48	48	NULL	2016-06-13 00:00:00.0000000	KAL	2016-06-13 18:14:25.0000000	KAL	2016-06-13 18:14:28.6600000	0	160477	NULL
--426	2	1	2016-05-31 00:00:00.0000000	2016-06-30 00:00:00.0000000	1	160478	1	0	1	4500.00	4500.00	1.000000	48	48	NULL	2016-06-13 00:00:00.0000000	KAL	2016-06-13 18:17:23.0000000	KAL	2016-06-13 18:17:26.4600000	0	160478	NULL

declare @OrderItemStatusClosed int = 4
declare @OrderItemStatusCancelled int = 5
declare @OperationIssuingOfShipmentDocumentsCode nvarchar(50) = 'ISHPD'
declare @CRICompanyCode nvarchar(50) = 'CRI';
declare @CRICompanyId int;

select @CRICompanyId = COMPANYNR from COMPANY where CODE = @CRICompanyCode;

declare @OrdersAndFirstOrderItems table(ORDER_ID int, INTERNAL_COMPANY_ID int, CUSTOMER_ID int, ORDER_ITEM_ID int);

insert into @OrdersAndFirstOrderItems select o.ORDER_ID, o.INTERNAL_COMPANY_ID, o.CUSTOMER_ID, min(oi.ORDER_ITEM_ID)
from ORDERS o, ORDER_ITEM oi where o.ORDER_ID = oi.ORDER_ID
and o.CUSTOMER_ID = @CRICompanyId and oi.STATUS not in (@OrderItemStatusClosed, @OrderItemStatusCancelled)
group by o.ORDER_ID, o.INTERNAL_COMPANY_ID, o.CUSTOMER_ID

INSERT INTO [dbo].[OPERATION_ORDER_INSTRUCTION]
		 ([OPERATION_ID]
		 ,[ORDER_ID]
		 ,[REMARKS]
		 ,[ENABLED]
		 ,[CREATE_USER]
		 ,[CREATE_TIMESTAMP]
		 ,[UPDATE_USER]
		 ,[UPDATE_TIMESTAMP])
     SELECT
		 op.OPERATION_ID
		 ,ofoi.ORDER_ID
		 ,op.[DESCRIPTION]
		 ,0
		 ,'sys'
		 ,GETDATE()
		 ,'sys'
		 ,GETDATE()
	FROM ADDITIONAL_OPERATION_COMPANY aoc, @OrdersAndFirstOrderItems ofoi, OPERATION op
	where aoc.COMPANYNR = ofoi.CUSTOMER_ID and op.OPERATION_ID = aoc.ADDITIONAL_OPERATION_ID
	and ofoi.INTERNAL_COMPANY_ID = op.INTERNAL_COMPANY_ID
	and not exists (select * from [OPERATION_ORDER_INSTRUCTION] where OPERATION_ID = op.OPERATION_ID and ORDER_ID = ofoi.ORDER_ID)
	
INSERT INTO [dbo].[OPERATION_ORDER_INSTRUCTION]
		 ([OPERATION_ID]
		 ,[ORDER_ID]
		 ,[REMARKS]
		 ,[ENABLED]
		 ,[CREATE_USER]
		 ,[CREATE_TIMESTAMP]
		 ,[UPDATE_USER]
		 ,[UPDATE_TIMESTAMP])
     SELECT
		 op.OPERATION_ID
		 ,ofoi.ORDER_ID
		 ,op.[DESCRIPTION]
		 ,0
		 ,'sys'
		 ,GETDATE()
		 ,'sys'
		 ,GETDATE()
	FROM @OrdersAndFirstOrderItems ofoi, OPERATION op, ADDITIONAL_OPERATION ao
	where ao.ADDITIONAL_OPERATION_ID not in (select ADDITIONAL_OPERATION_ID from ADDITIONAL_OPERATION_COMPANY)
	and ao.ADDITIONAL_OPERATION_ID = op.OPERATION_ID
	and ofoi.INTERNAL_COMPANY_ID = op.INTERNAL_COMPANY_ID
	and not exists (select * from [OPERATION_ORDER_INSTRUCTION] where OPERATION_ID = op.OPERATION_ID and ORDER_ID = ofoi.ORDER_ID)
	
INSERT INTO [dbo].[OPERATION_INSTRUCTION]
		 ([OPERATION_ID]
		 ,[ORDER_ITEM_ID]
		 ,[REMARKS]
		 ,[QUANTITY]
		 ,[ENABLED]
		 ,[CREATE_USER]
		 ,[CREATE_TIMESTAMP]
		 ,[UPDATE_USER]
		 ,[UPDATE_TIMESTAMP])
     SELECT
		 op.OPERATION_ID
		 ,oi.ORDER_ITEM_ID
		 ,op.[DESCRIPTION]
		 ,1
		 ,1
		 ,'sys'
		 ,GETDATE()
		 ,'sys'
		 ,GETDATE()
	FROM [OPERATION] op, ORDER_ITEM oi, @OrdersAndFirstOrderItems ofoi
	WHERE 
		op.CODE = @OperationIssuingOfShipmentDocumentsCode
		and ofoi.ORDER_ID = oi.ORDER_ID
		and ofoi.ORDER_ITEM_ID = oi.ORDER_ITEM_ID
		and oi.STATUS not in (@OrderItemStatusClosed, @OrderItemStatusCancelled)
		and not exists (select * from [OPERATION_INSTRUCTION] where OPERATION_ID = op.OPERATION_ID and ORDER_ITEM_ID = oi.ORDER_ITEM_ID)	
	
INSERT INTO [dbo].[OPERATION_INSTRUCTION]
		 ([OPERATION_ID]
		 ,[ORDER_ITEM_ID]
		 ,[REMARKS]
		 ,[QUANTITY]
		 ,[ENABLED]
		 ,[CREATE_USER]
		 ,[CREATE_TIMESTAMP]
		 ,[UPDATE_USER]
		 ,[UPDATE_TIMESTAMP])
     SELECT
		 ooi.OPERATION_ID
		 ,oi.ORDER_ITEM_ID
		 ,ooi.REMARKS
		 ,ooi.QUANTITY
		 ,ooi.[ENABLED]
		 ,'sys'
		 ,GETDATE()
		 ,'sys'
		 ,GETDATE()
	FROM [OPERATION_ORDER_INSTRUCTION] ooi, ORDER_ITEM oi, OPERATION_ADDITIONAL_OPERATION oao, @OrdersAndFirstOrderItems ofoi
	WHERE ooi.ORDER_ID = oi.ORDER_ID
		and oi.OPERATION_ID = oao.OPERATION_ID and ooi.OPERATION_ID = oao.ADDITIONAL_OPERATION_ID
		and ofoi.ORDER_ID = oi.ORDER_ID
		and oi.STATUS not in (@OrderItemStatusClosed, @OrderItemStatusCancelled)
		and not exists (select * from [OPERATION_INSTRUCTION] where OPERATION_ID = ooi.OPERATION_ID and ORDER_ITEM_ID = oi.ORDER_ITEM_ID)