-- 1. Add operation type "StockChange" for SID "Rolls" for all products of SGN

BEGIN TRY
	BEGIN TRANSACTION

		INSERT INTO PRODUCT_SID_OPERATION_TYPE
		(
			PRODUCT_SID_ID,
			OPERATION_TYPE_ID
		)
		SELECT
			psi.PRODUCT_STORAGE_IDENTIFIER_ID,
			ot.OPERATION_TYPE_ID
		FROM
			OPERATION_TYPE ot,
			PRODUCT_STORAGE_IDENTIFIER psi
			join STORAGE_IDENTIFIER si on si.STORAGE_IDENTIFIER_ID = psi.SID_ID
			join PRODUCT p on p.PRODUCT_ID = psi.PRODUCT_ID
			join PRODUCT_GROUP pg on pg.PRODUCT_GROUP_ID = p.PRODUCT_GROUP_ID
			join PRODUCT_GROUP_INT_COMPANY pgic on pgic.PRODUCT_GROUP_ID = pg.PRODUCT_GROUP_ID
			join INTERNAL_COMPANY ic on pgic.INT_COMPANYNR = ic.COMPANYNR
			join COMPANY c on c.COMPANYNR = ic.COMPANYNR
		WHERE
			c.CODE = 'IC_SGN' and
			si.CODE = 'RLL' and
			ot.DESCRIPTION = 'StockChange'

	COMMIT TRANSACTION
END TRY
BEGIN CATCH
	IF @@TRANCOUNT > 0
		ROLLBACK TRANSACTION
		SELECT ERROR_NUMBER() as ErrorNumber, ERROR_MESSAGE() as ErrorMessage
END CATCH

-- check
--select * from PRODUCT_SID_OPERATION_TYPE psot
--join OPERATION_TYPE ot on ot.OPERATION_TYPE_ID = psot.OPERATION_TYPE_ID
--join PRODUCT_STORAGE_IDENTIFIER psi on psi.PRODUCT_STORAGE_IDENTIFIER_ID = psot.PRODUCT_SID_ID
--join STORAGE_IDENTIFIER si on si.STORAGE_IDENTIFIER_ID = psi.SID_ID
--join PRODUCT p on p.PRODUCT_ID = psi.PRODUCT_ID
--join PRODUCT_GROUP pg on pg.PRODUCT_GROUP_ID = p.PRODUCT_GROUP_ID
--join PRODUCT_GROUP_INT_COMPANY pgic on pgic.PRODUCT_GROUP_ID = pg.PRODUCT_GROUP_ID
--join INTERNAL_COMPANY ic on pgic.INT_COMPANYNR = ic.COMPANYNR
--join COMPANY c on c.COMPANYNR = ic.COMPANYNR
--where
--	c.CODE = 'IC_SGN' and
--	si.CODE = 'RLL' and
--	ot.DESCRIPTION = 'StockChange'